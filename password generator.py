import random
import string
class InvalidLength(Exception):
    pass
class InvalidAlphabet(Exception):
    pass
class InvalidDigit(Exception):
    pass
class InvalidSymbol(Exception):
    pass
class InvalidFormat(Exception):
    pass
def Replace(password,ind,char):
    i=len(password)
    password=list(password)
    for j in range(i):
        if j==ind:
            password[j]=char
            break
    password="".join(password)
    return password

def empty_position(password):
    empty_pos = []
    for i in range(len(password)):
        if password[i] == " ":
            empty_pos.append(i)
    return empty_pos
alphabets=list(string.ascii_letters)
digits=list(string.digits)
symbols=list(string.punctuation)
print("Hi Welcome to our Password generator: ")
print("We will provide you with passwords of your choice.")
print("First provide us with the information about what kind of password you want: ")
print("Ok,then let's start.")
print("Note: If you want to enter multiple values then separate them by white space!!")
print("If you do not want any specific choice then just enter 'NULL'")
length=int(input("Enter the length of the password: "))
num_digit=int(input("Enter the number of digits you want in your password: "))
num_sym=int(input("Enter the number of symbols you want in your password: "))
num_alpha=length-(num_sym+num_digit)
if num_digit+num_sym>length:
    raise InvalidLength("Plese check length of your password: ")
no_char=input("Enter the alphabets that should not be included in password: ")
no_char=no_char.split(" ")
no_char=set(no_char)
for i in no_char:
    if i not in alphabets:
        raise InvalidAlphabet(f"'{i}'is not an alphabet!!!")
no_digit=input("Enter the digits that should not be included in password: ")
no_digit=no_digit.split(" ")
no_digit=set(no_digit)
for i in no_digit:
    if i not in digits:
        raise InvalidDigit(f"'{i}' is not a digit!!!")
no_symbol=input("Enter the symbols that should not be included in password: ")
no_symbol=no_symbol.split(" ")
no_symbol=set(no_symbol)
for i in no_symbol:
    if i not in symbols:
        raise InvalidSymbol(f"'{i}' is not a symbol!!!!")
print("If you wish you can provide which letter,symbol or digit you want at a specific location.")
print("You can enter it in the form X-Y")
print("Where X denotes the specific location.")
print("Where Y denotes the specific character.")
choices=input("Your choices: ")
choices=choices.split(" ")
if choices[0]!='NULL':
    for i in choices:
        if len(i)!=3:
            raise InvalidFormat("Please check your format!!!!")
        else:
            if i[0] not in digits:
                raise InvalidFormat("Please enter correct location!!!!!")
            else:
                if int(i[0])>length:
                    raise InvalidFormat("Invalid location specified!!!!")
            if i[1]!='-':
                raise InvalidFormat("Please check your format!!!!")
            if i[2] in no_char:
                raise InvalidFormat("The entered alphabet is present in the set of characters that are not to be included in the password")
            elif i[2] in no_symbol:
                raise InvalidFormat("The entered symbol is present in the set of the characters that are not to be included in the password")
            elif i[2] in no_digit:
                raise InvalidFormat("The entered digit is present in the set of the characters that are not to be included in the password.")

num_choices=len(choices)
num_alpha_choice,num_sym_choice,num_digit_choice=0,0,0
password=" "*length
if choices[0]!='NULL':
    for i in choices:
        password=Replace(password,int(i[0])-1,i[2])
    for i in choices:
        if i[2] in alphabets:
            num_alpha_choice += 1
        elif i[2] in digits:
            num_digit_choice += 1
        else:
            num_sym_choice += 1
print("The top 20 passwords generated by our system is: ")
list_passwords=list(password)
for i in no_char:
    if i in alphabets:
        alphabets.remove(i)
for i in no_symbol:
    if i in symbols:
        symbols.remove(i)
for i in no_digit:
    if i in digits:
        digits.remove(i)
for i in range(20):
    password="".join(list_passwords)
    empty_pos = empty_position(password)
    for j in range(num_sym-num_sym_choice):
        if len(empty_pos)==0:
            break
        else:
            password = Replace(password, random.choice(empty_pos), random.choice(symbols))
            empty_pos = empty_position(password)
    for k in range(num_digit-num_digit_choice):
        if len(empty_pos)==0:
            break
        else:
            password = Replace(password, random.choice(empty_pos), random.choice(digits))
            empty_pos = empty_position(password)
    for l in range(num_alpha-num_alpha_choice):
        if len(empty_pos)==0:
            break
        else:
            password = Replace(password, random.choice(empty_pos), random.choice(alphabets))
            empty_pos = empty_position(password)
    print(password)









